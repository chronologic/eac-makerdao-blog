'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _LocalService2 = require('../core/LocalService');

var _LocalService3 = _interopRequireDefault(_LocalService2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TimerService = function (_LocalService) {
  (0, _inherits3.default)(TimerService, _LocalService);

  function TimerService() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'timer';
    (0, _classCallCheck3.default)(this, TimerService);

    var _this = (0, _possibleConstructorReturn3.default)(this, (TimerService.__proto__ || (0, _getPrototypeOf2.default)(TimerService)).call(this, name));

    _this._timers = {};
    return _this;
  }

  (0, _createClass3.default)(TimerService, [{
    key: 'createTimer',
    value: function createTimer(name, duration, repeating, callback) {
      this.disposeTimer(name);
      this._timers[name] = {
        repeating: repeating,
        id: (repeating ? setInterval : setTimeout)(callback, duration)
      };
    }
  }, {
    key: 'disposeTimer',
    value: function disposeTimer(name) {
      if (this._timers.hasOwnProperty(name)) {
        var timer = this._timers[name];
        (timer.repeating ? clearInterval : clearTimeout)(timer.id);
      }
    }
  }, {
    key: 'disposeAllTimers',
    value: function disposeAllTimers() {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = (0, _getIterator3.default)(this.listTimers()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var name = _step.value;

          this.disposeTimer(name);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: 'listTimers',
    value: function listTimers() {
      return (0, _keys2.default)(this._timers);
    }
  }]);
  return TimerService;
}(_LocalService3.default);

exports.default = TimerService;