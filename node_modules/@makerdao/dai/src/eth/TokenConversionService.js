'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _PrivateService2 = require('../core/PrivateService');

var _PrivateService3 = _interopRequireDefault(_PrivateService2);

var _contracts = require('../../contracts/contracts');

var _contracts2 = _interopRequireDefault(_contracts);

var _Currency = require('./Currency');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TokenConversionService = function (_PrivateService) {
  (0, _inherits3.default)(TokenConversionService, _PrivateService);

  function TokenConversionService() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'conversion';
    (0, _classCallCheck3.default)(this, TokenConversionService);
    return (0, _possibleConstructorReturn3.default)(this, (TokenConversionService.__proto__ || (0, _getPrototypeOf2.default)(TokenConversionService)).call(this, name, ['smartContract', 'token', 'allowance']));
  }

  (0, _createClass3.default)(TokenConversionService, [{
    key: '_getToken',
    value: function _getToken(token) {
      return this.get('token').getToken(token);
    }
  }, {
    key: 'convertEthToWeth',
    value: function convertEthToWeth(amount) {
      var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Currency.ETH;

      return this._getToken(_Currency.WETH).deposit((0, _Currency.getCurrency)(amount, unit));
    }
  }, {
    key: 'convertWethToPeth',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(amount) {
        var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Currency.WETH;
        var pethToken;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                pethToken = this._getToken(_Currency.PETH);
                _context.next = 3;
                return this.get('allowance').requireAllowance(_Currency.WETH, this.get('smartContract').getContractByName(_contracts2.default.SAI_TUB).address);

              case 3:
                return _context.abrupt('return', pethToken.join(amount, unit));

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function convertWethToPeth(_x3) {
        return _ref.apply(this, arguments);
      }

      return convertWethToPeth;
    }()
  }, {
    key: 'convertEthToPeth',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(value) {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.convertEthToWeth(value);

              case 2:
                return _context2.abrupt('return', this.convertWethToPeth(value));

              case 3:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function convertEthToPeth(_x5) {
        return _ref2.apply(this, arguments);
      }

      return convertEthToPeth;
    }()
  }]);
  return TokenConversionService;
}(_PrivateService3.default);

exports.default = TokenConversionService;