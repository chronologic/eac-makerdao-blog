'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _Currency = require('../Currency');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Erc20Token = function () {
  function Erc20Token(contract, web3Service) {
    var decimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 18;
    var symbol = arguments[3];
    (0, _classCallCheck3.default)(this, Erc20Token);

    this._contract = contract;
    this._web3Service = web3Service;
    this._decimals = decimals;
    this.symbol = symbol;
    this._currency = _Currency.currencies[symbol];
  }

  (0, _createClass3.default)(Erc20Token, [{
    key: 'allowance',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(tokenOwner, spender) {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.t0 = this;
                _context.next = 3;
                return this._contract.allowance(tokenOwner, spender);

              case 3:
                _context.t1 = _context.sent;
                return _context.abrupt('return', _context.t0._valueFromContract.call(_context.t0, _context.t1));

              case 5:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function allowance(_x2, _x3) {
        return _ref.apply(this, arguments);
      }

      return allowance;
    }()
  }, {
    key: 'balanceOf',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(owner) {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.t0 = this;
                _context2.next = 3;
                return this._contract.balanceOf(owner);

              case 3:
                _context2.t1 = _context2.sent;
                return _context2.abrupt('return', _context2.t0._valueFromContract.call(_context2.t0, _context2.t1));

              case 5:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function balanceOf(_x4) {
        return _ref2.apply(this, arguments);
      }

      return balanceOf;
    }()
  }, {
    key: 'totalSupply',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.t0 = this;
                _context3.next = 3;
                return this._contract.totalSupply();

              case 3:
                _context3.t1 = _context3.sent;
                return _context3.abrupt('return', _context3.t0._valueFromContract.call(_context3.t0, _context3.t1));

              case 5:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function totalSupply() {
        return _ref3.apply(this, arguments);
      }

      return totalSupply;
    }()
  }, {
    key: 'address',
    value: function address() {
      return this._contract.address;
    }
  }, {
    key: '_valueForContract',
    value: function _valueForContract(value) {
      var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._currency;

      return (0, _Currency.getCurrency)(value, unit).toEthersBigNumber(this._decimals);
    }
  }, {
    key: '_valueFromContract',
    value: function _valueFromContract(value) {
      return this._currency(value, -1 * this._decimals);
    }
  }, {
    key: 'approve',
    value: function approve(spender, value) {
      var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this._currency;

      return this._contract.approve(spender, this._valueForContract(value, unit));
    }
  }, {
    key: 'approveUnlimited',
    value: function approveUnlimited(spender) {
      return this._contract.approve(spender, -1);
    }
  }, {
    key: 'transfer',
    value: function transfer(to, value) {
      var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _Currency.currencies[this.symbol];

      return this._contract.transfer(to, this._valueForContract(value, unit));
    }
  }, {
    key: 'transferFrom',
    value: function transferFrom(from, to, value) {
      var unit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _Currency.currencies[this.symbol];

      return this._contract.transferFrom(from, to, this._valueForContract(value, unit));
    }
  }]);
  return Erc20Token;
}();

exports.default = Erc20Token;