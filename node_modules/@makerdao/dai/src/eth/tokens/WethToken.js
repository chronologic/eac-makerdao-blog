'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Erc20Token2 = require('./Erc20Token');

var _Erc20Token3 = _interopRequireDefault(_Erc20Token2);

var _Currency = require('../Currency');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WethToken = function (_Erc20Token) {
  (0, _inherits3.default)(WethToken, _Erc20Token);

  function WethToken(contract, web3Service, decimals) {
    (0, _classCallCheck3.default)(this, WethToken);
    return (0, _possibleConstructorReturn3.default)(this, (WethToken.__proto__ || (0, _getPrototypeOf2.default)(WethToken)).call(this, contract, web3Service, decimals, 'WETH'));
  }

  (0, _createClass3.default)(WethToken, [{
    key: 'name',
    value: function name() {
      return this._contract.name();
    }
  }, {
    key: 'deposit',
    value: function deposit(amount) {
      var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Currency.ETH;

      return this._contract.deposit({
        value: this._valueForContract(amount, unit)
      });
    }
  }, {
    key: 'withdraw',
    value: function withdraw(amount) {
      var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Currency.ETH;

      var value = this._valueForContract(amount, unit);
      return this._contract.withdraw(value);
    }
  }]);
  return WethToken;
}(_Erc20Token3.default);

exports.default = WethToken;