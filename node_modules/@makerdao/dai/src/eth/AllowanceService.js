'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _PrivateService2 = require('../core/PrivateService');

var _PrivateService3 = _interopRequireDefault(_PrivateService2);

var _bignumber = require('bignumber.js');

var _bignumber2 = _interopRequireDefault(_bignumber);

var _constants = require('../utils/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var maxAllowance = (0, _bignumber2.default)(_constants.UINT256_MAX).shiftedBy(-18);

var AllowanceService = function (_PrivateService) {
  (0, _inherits3.default)(AllowanceService, _PrivateService);

  function AllowanceService() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'allowance';
    (0, _classCallCheck3.default)(this, AllowanceService);

    var _this = (0, _possibleConstructorReturn3.default)(this, (AllowanceService.__proto__ || (0, _getPrototypeOf2.default)(AllowanceService)).call(this, name, ['token']));

    _this._shouldMinimizeAllowance = false;
    return _this;
  }

  (0, _createClass3.default)(AllowanceService, [{
    key: 'initialize',
    value: function initialize(settings) {
      if (settings && settings.useMinimizeAllowancePolicy) {
        this._shouldMinimizeAllowance = true;
      }
    }
  }, {
    key: 'requireAllowance',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(tokenSymbol, spenderAddress) {
        var amountEstimate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : maxAllowance;
        var token, ownerAddress, allowance;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                token = this.get('token').getToken(tokenSymbol);
                ownerAddress = this.get('token').get('web3').currentAccount();
                _context.next = 4;
                return token.allowance(ownerAddress, spenderAddress);

              case 4:
                allowance = _context.sent;

                if (!(allowance.lt(maxAllowance.div(2)) && !this._shouldMinimizeAllowance)) {
                  _context.next = 7;
                  break;
                }

                return _context.abrupt('return', token.approveUnlimited(spenderAddress));

              case 7:
                if (!(allowance.lt(amountEstimate) && this._shouldMinimizeAllowance)) {
                  _context.next = 9;
                  break;
                }

                return _context.abrupt('return', token.approve(spenderAddress, amountEstimate));

              case 9:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function requireAllowance(_x2, _x3) {
        return _ref.apply(this, arguments);
      }

      return requireAllowance;
    }()
  }, {
    key: 'removeAllowance',
    value: function removeAllowance(tokenSymbol, spenderAddress) {
      var token = this.get('token').getToken(tokenSymbol);
      return token.allowance(this.get('token').get('web3').currentAccount(), spenderAddress).then(function (allowance) {
        if (parseInt(allowance) != 0) {
          return token.approve(spenderAddress, '0');
        }
      });
    }
  }]);
  return AllowanceService;
}(_PrivateService3.default);

exports.default = AllowanceService;